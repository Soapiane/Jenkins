name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for SonarQube to analyze all history

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test
        run: |
          ./gradlew test
        continue-on-error: true

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: build/test-results/test/*.xml
          check_name: "Test Results"

      - name: Publish Cucumber Report
        if: always()
        uses: deblockt/cucumber-report-annotations-action@v1.7
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "reports/example-report.json"

      - name: Build for SonarQube
        run: ./gradlew build -x test

      - name: Run SonarQube analysis
        run: ./gradlew sonarqube -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
        env:
          SONAR_HOST_URL: 'http://197.140.142.82:9000'
          SONAR_LOGIN: "b532d297b16e6077d59df904c6b2dd103600d4a9"

      - name: Build
        run: |
          ./gradlew jar
          ./gradlew javadoc

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/libs/*.jar
            build/docs/javadoc/

      - name: Deploy
        run: echo "Deployment step"  # Replace with actual deployment commands

      - name: Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          from: ls_yekene@esi.dz
          to: sfnhckr@gmail.com
          subject: ${{ job.status == 'success' && 'Deployment Success' || 'Pipeline Failed' }}
          body: ${{ job.status == 'success' && 'The deployment was successful.' || 'The GitHub Actions pipeline has failed. Please check the logs for more details.' }}

      - name: Send Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: "https://hooks.slack.com/services/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"
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "${{ job.status == 'success' && 'Deployment Success - Project sofiane' || 'Pipeline Failed - Project sofiane' }}"
            }